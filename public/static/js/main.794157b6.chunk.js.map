{"version":3,"sources":["components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","logo.png","App.js","index.js"],"names":["LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","className","classNames","format","to","MissionKey","LAUNCHES_QUERY","gql","Component","useQuery","loading","error","data","launches","map","LAUNCH_QUERY","useParams","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","cache","InMemoryCache","App","ApolloProvider","src","logo","alt","style","width","display","margin","exact","path","component","Launches","Launch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAKe,SAASA,EAAT,GAAiG,IAAD,IAA3EC,OAASC,EAAkE,EAAlEA,cAAeC,EAAmD,EAAnDA,aAAcC,EAAqC,EAArCA,kBAAmBC,EAAkB,EAAlBA,eAE3F,OACE,qBAAKC,UAAU,sBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,4CAAc,sBAAMA,UAAWC,IAAW,CACxC,eAAgBF,EAChB,eAAgBA,IAFJ,SAGTF,OACL,wCAAU,cAAC,IAAD,CAAQK,OAAO,mBAAf,SAAmCJ,UAE/C,qBAAKE,UAAU,WAAf,SACE,cAAC,IAAD,CAAMG,GAAE,kBAAaP,GAAiBI,UAAU,oBAAhD,mCChBK,SAASI,IACtB,OACE,sBAAKJ,UAAU,OAAf,UACE,8BACE,sBAAMA,UAAU,yBADlB,gBAGA,8BACE,sBAAMA,UAAU,wBADlB,gBCFN,I,EAAMK,EAAiBC,YAAH,6IAWL,SAASC,IACtB,MAA+BC,YAASH,GAAjCI,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,KACvB,OAAIF,EAAgB,2CAChBC,EAAc,yCAEhB,qCACE,oBAAIV,UAAU,iBAAd,sBACA,cAACI,EAAD,IACCO,EAAKC,SAASC,KAAI,SAAClB,GAAD,OACjB,cAACD,EAAD,CAAuCC,OAAQA,GAA9BA,EAAOC,qBClBhC,IAAMkB,EAAeR,YAAH,iRAgBH,SAASC,IACtB,IAAKX,EAAiBmB,cAAjBnB,cACLA,EAAgBoB,SAASpB,GACzB,MAA+BY,YAASM,EAAc,CACpDG,UAAW,CAACrB,mBADPa,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,KAGvB,GAAIF,EAAS,OAAO,2CACpB,GAAIC,EAAO,OAAO,yCAClB,MAAmGC,EAAKhB,OAAjGE,EAAP,EAAOA,aAAcqB,EAArB,EAAqBA,YAAanB,EAAlC,EAAkCA,eAAlC,IAAkDoB,OAASC,EAA3D,EAA2DA,UAAWC,EAAtE,EAAsEA,YAAaC,EAAnF,EAAmFA,YACnF,OACE,qCACE,qBAAItB,UAAU,iBAAd,sBAAwC,sBAAMA,UAAU,YAAhB,SAA6BH,OACrE,oBAAIG,UAAU,OAAd,8BACA,qBAAIA,UAAU,aAAd,UACE,qBAAIA,UAAU,kBAAd,4BACkBJ,KAElB,qBAAII,UAAU,kBAAd,0BACgBkB,KAEhB,qBAAIlB,UAAU,kBAAd,gCACqB,sBAAMA,UAAWC,IAAW,CAC/C,eAAgBF,EAChB,eAAgBA,IAFG,SAGhBA,EAAiB,MAAO,aAG/B,oBAAIC,UAAU,OAAd,4BACA,qBAAIA,UAAU,aAAd,UACE,qBAAIA,UAAU,kBAAd,yBAA6CoB,KAC7C,qBAAIpB,UAAU,kBAAd,2BAA+CqB,KAC/C,qBAAIrB,UAAU,kBAAd,2BAA+CsB,QAEjD,uBACA,cAAC,IAAD,CAAMtB,UAAU,oBAAoBG,GAAG,IAAvC,sBC1DS,UAA0B,iCCOnCoB,EAAS,IAAIC,IAAa,CAC9BC,IAAK,WACLC,MAAO,IAAIC,MAiBEC,MAdf,WACE,OACE,cAACC,EAAA,EAAD,CAAgBN,OAAQA,EAAxB,SACE,cAAC,IAAD,UACE,sBAAKvB,UAAU,YAAf,UACE,qBAAK8B,IAAKC,EAAMC,IAAI,SAASC,MAAO,CAACC,MAAO,IAAKC,QAAS,QAASC,OAAQ,UAC3E,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,cAAC,IAAD,CAAOF,KAAK,yBAAyBC,UAAWE,YCf1DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.794157b6.chunk.js","sourcesContent":["import React from 'react'\nimport classNames from 'classnames'\nimport Moment from 'react-moment'\nimport {Link} from 'react-router-dom'\n\nexport default function LaunchItem({launch: {flight_number, mission_name, launch_date_local, launch_success}}) {\n\n  return (\n    <div className='card card-body mb-3'>\n      <div className='row'>\n        <div className='col-md-9'>\n          <h4> Mission: <span className={classNames({\n            'text-success': launch_success,\n            'text-danger': !launch_success\n          })}>{mission_name}</span></h4>\n          <p> Date: <Moment format='YYYY-MM-DD HH:mm'>{launch_date_local}</Moment></p>\n        </div>\n        <div className='col-md-3'>\n          <Link to={`/launch/${flight_number}`} className='btn btn-secondary'> Launch Detail</Link>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function MissionKey() {\n  return (\n    <div className='my-3'>\n      <p>\n        <span className=\"px-3 mr-2 bg-success\"/> = Success\n      </p>\n      <p>\n        <span className=\"px-3 mr-2 bg-danger\"/> = Fail\n      </p>\n    </div>\n  )\n\n}\n","import React from 'react'\nimport {useQuery, gql} from '@apollo/client';\n\nimport LaunchItem from './LaunchItem'\nimport MissionKey from './MissionKey'\n\nconst LAUNCHES_QUERY = gql`\n  query {\n  launches {\n    flight_number\n    mission_name\n    launch_date_local\n    launch_success\n  }\n}\n`;\n\nexport default function Component() {\n  const {loading, error, data} = useQuery(LAUNCHES_QUERY)\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  return (\n    <>\n      <h1 className='display-4 my-3'>Launches</h1>\n      <MissionKey/>\n      {data.launches.map((launch) => (\n        <LaunchItem key={launch.flight_number} launch={launch}/>\n      ))}\n    </>\n  )\n\n\n}\n","import React from 'react'\nimport {useQuery, gql} from '@apollo/client';\nimport {Link, useParams} from \"react-router-dom\";\nimport classNames from 'classnames'\n\nimport LaunchItem from './LaunchItem'\nimport MissionKey from './MissionKey'\n\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($flight_number: Int!){\n  launch(flight_number: $flight_number) {\n    flight_number\n    mission_name\n    launch_year\n    launch_success\n    rocket {\n      rocket_id\n      rocket_name\n      rocket_type\n    }\n  }\n}\n`;\n\nexport default function Component() {\n  let {flight_number} = useParams()\n  flight_number = parseInt(flight_number)\n  const {loading, error, data} = useQuery(LAUNCH_QUERY, {\n    variables: {flight_number},\n  })\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n  const {mission_name, launch_year, launch_success, rocket: {rocket_id, rocket_name, rocket_type}} = data.launch\n  return (\n    <>\n      <h1 className='display-4 my-3'>Mission: <span className='text-dark'>{mission_name}</span></h1>\n      <h4 className='mb-3'> Launch Details </h4>\n      <ul className='list-group'>\n        <li className='list-group-item'>\n          Flight Number: {flight_number}\n        </li>\n        <li className='list-group-item'>\n          Launch Year: {launch_year}\n        </li>\n        <li className='list-group-item'>\n          Launch Successful: <span className={classNames({\n          'text-success': launch_success,\n          'text-danger': !launch_success\n        })}>{launch_success ? 'Yes': 'No'}</span>\n        </li>\n      </ul>\n      <h4 className='my-3'> Rocket Detail</h4>\n      <ul className='list-group'>\n        <li className='list-group-item'> Rocket Id: {rocket_id}</li>\n        <li className='list-group-item'> Rocket Name: {rocket_name}</li>\n        <li className='list-group-item'> Rocket Type: {rocket_type}</li>\n      </ul>\n      <hr/>\n      <Link className='btn btn-secondary' to='/'> Back</Link>\n    </>\n  )\n\n\n}\n","export default __webpack_public_path__ + \"static/media/logo.3a94afba.png\";","import {ApolloClient, InMemoryCache} from '@apollo/client';\nimport {ApolloProvider} from '@apollo/client/react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Launches from './components/Launches'\nimport Launch from './components/Launch'\nimport logo from './logo.png'\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"container\">\n          <img src={logo} alt='SpaceX' style={{width: 300, display: 'block', margin: 'auto'}}/>\n          <Route exact path='/' component={Launches}/>\n          <Route path='/launch/:flight_number' component={Launch}/>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}